@model WebUI.Models.User

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .form-group {
        margin-bottom: 6px;
    }
</style>
<h3 style="margin-left:10px;">Edit User</h3>
<hr />
<div style="margin:0px 10% 0px 30px;">

    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="UserId" />
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                   <label asp-for="FirstName" class="control-label"></label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div class="form-group">
                   <label asp-for="LastName" class="control-label"></label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MobileNo" class="control-label"></label>
                    <input asp-for="MobileNo" class="form-control" maxlength="10" onkeypress='javascript: return isNumber(event)'
            autocomplete='off' />
                    <span asp-validation-for="MobileNo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Sex" class="control-label"></label>
                    @*  <input asp-for="Sex" class="form-control" />*@
                    @*  <select asp-for="Gender" asp-items="Model.GenderList"></select> *@
                    @Html.DropDownList("Sex", new List<SelectListItem>
                    {
                    new SelectListItem{ Text="Select", Value = "" },
                    new SelectListItem{ Text="Male", Value = "Male" },
                    new SelectListItem{ Text="Female", Value = "Female" },
                    }, new { id = "Sex", @class = "form-control" })
                    <span asp-validation-for="Sex" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Role" class="control-label"></label>
                    @*   <input asp-for="Role" class="form-control" />*@
                    @Html.DropDownList("Role", new List<SelectListItem>
                    {
                    new SelectListItem{ Text="Select", Value = "" },
                    new SelectListItem{ Text="User", Value = "User" },
                    new SelectListItem{ Text="Admin", Value = "Admin" },
                    }, new { id = "Role", @class = "form-control" })
                    <span asp-validation-for="Role" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PasswordHash" class="control-label"></label>
                    <input asp-for="PasswordHash" type="password" class="form-control" />
                    <span asp-validation-for="PasswordHash" class="text-danger"></span>
                </div>
                @*<div class="form-group form-check">
                <label class="form-check-label">
                <input class="form-check-input" asp-for="Status" /> @Html.DisplayNameFor(model => model.Status)
                </label>
                </div>*@
                @*<div class="form-group">
                <label asp-for="CreatedOn" class="control-label"></label>
                <input asp-for="CreatedOn" class="form-control" />
                <span asp-validation-for="CreatedOn" class="text-danger"></span>
                </div>
                <div class="form-group">
                <label asp-for="CreatedBy" class="control-label"></label>
                <input asp-for="CreatedBy" class="form-control" />
                <span asp-validation-for="CreatedBy" class="text-danger"></span>
                </div>
                <div class="form-group">
                <label asp-for="UpdatedOn" class="control-label"></label>
                <input asp-for="UpdatedOn" class="form-control" />
                <span asp-validation-for="UpdatedOn" class="text-danger"></span>
                </div>
                <div class="form-group">
                <label asp-for="UpdatedBy" class="control-label"></label>
                <input asp-for="UpdatedBy" class="form-control" />
                <span asp-validation-for="UpdatedBy" class="text-danger"></span>
                </div>*@
                <div class="form-group" style="margin-top:15px;">
                  <input type="submit" value="Save" class="btn btn-primary" />
                    <a asp-action="Index">Back to List</a>
                </div>
            </form>
        </div>

    </div>
</div>
@*
<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
    <script>
    // Write the validation script.
    function isNumber(evt) {
        var iKeyCode = (evt.which) ? evt.which : evt.keyCode
        if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))
            return false;

        return true;
    }
</script>
